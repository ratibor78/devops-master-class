# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
# triggered on master branch
- master

pool: SelfPool

# Pipelines -> Stages (qa, prod) -> Jobs -> Tasks (Steps)

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - bash: echo Build FirstJob
  - job: SecondJob
    steps:
    - bash: echo Build SecondJob
    - bash: echo $(PipelineLevel)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourcesBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)

    # copying files
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
#- stage: DevDeploy
#  # add stage dependency
#  dependsOn: Build
#  # add env variable
#  variables:
#    environment: dev
#  jobs:
#  - job: DevDeployJob
#    steps:
#    - bash: echo $(environment)DeployJob
#- stage: QADeploy
#  # add stage dependency
#  dependsOn: Build
#  variables:
#    environment: qa
#  jobs:
#  - job: QADeployJob
#    steps:
#    - bash: echo $(environment)DeployJob
#- stage: ProdDeploy
#  variables:
#    environment: prod
#  # add stage dependency
#  dependsOn:
#  - DevDeploy
#  - QADeploy
#  jobs:
#  - job: ProdDeployJob
#    steps:
#    - bash: echo $(environment)DeployJob
